/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "menu_menu.h"

// Global variable declarations
const PROGMEM  ConnectorLocalInfo applicationInfo = { "Test", "2de010eb-698d-4e2c-84fe-21da6552c1d2" };
TcMenuRemoteServer remoteServer(applicationInfo);

NoRenderer renderer;
NoInitialisationNeeded serialInitializer;
SerialTagValueTransport serialTransport(&Serial);
TagValueRemoteServerConnection serialConnection(serialTransport, serialInitializer);

// Global Menu Item declarations
RENDERING_CALLBACK_NAME_INVOKE(fnAdjustRtCall, backSubItemRenderFn, "Adjust", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoAdjust = { "Adjust", 2, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackAdjust(fnAdjustRtCall, NULL);
SubMenuItem menuAdjust(&minfoAdjust, &menuBackAdjust, NULL);
const PROGMEM AnalogMenuInfo minfoRCServoStart = { "RC_Servo_Start", 6, 0xffff, 1500, NO_CALLBACK, 500, 1, "Unit" };
AnalogMenuItem menuRCServoStart(&minfoRCServoStart, 0, NULL);
RENDERING_CALLBACK_NAME_INVOKE(fnLimitsRtCall, backSubItemRenderFn, "Limits", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoLimits = { "Limits", 5, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackLimits(fnLimitsRtCall, &menuRCServoStart);
SubMenuItem menuLimits(&minfoLimits, &menuBackLimits, NULL);
const char enumStrInputType_0[] PROGMEM = "Rc Servo";
const char enumStrInputType_1[] PROGMEM = "PWM";
const char enumStrInputType_2[] PROGMEM = "Voltage";
const char* const enumStrInputType[] PROGMEM  = { enumStrInputType_0, enumStrInputType_1, enumStrInputType_2 };
const PROGMEM EnumMenuInfo minfoInputType = { "InputType", 4, 0xffff, 2, NO_CALLBACK, enumStrInputType };
EnumMenuItem menuInputType(&minfoInputType, 0, &menuLimits);
RENDERING_CALLBACK_NAME_INVOKE(fnM1S1RtCall, backSubItemRenderFn, "M1S1", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoM1S1 = { "M1S1", 3, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackM1S1(fnM1S1RtCall, &menuInputType);
SubMenuItem menuM1S1(&minfoM1S1, &menuBackM1S1, NULL);
RENDERING_CALLBACK_NAME_INVOKE(fnWizardRtCall, backSubItemRenderFn, "Input", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoWizard = { "Input", 1, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackWizard(fnWizardRtCall, &menuM1S1);
SubMenuItem menuWizard(&minfoWizard, &menuBackWizard, &menuAdjust);

void setupMenu() {
    // First we set up eeprom and authentication (if needed).

    // Now add any readonly, non-remote and visible flags.
    menuInputType.setReadOnly(true);

    // Code generated by plugins.
    menuMgr.initWithoutInput(&renderer, &menuWizard);
    remoteServer.addConnection(&serialConnection);
}

